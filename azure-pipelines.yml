# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master

pr:
  branches:
    include:
    - master

stages:
- stage: Build
  jobs:
  - job:
    displayName: "build"
    timeoutInMinutes: 60
    pool:
      vmImage: ubuntu-20.04
    container:
      image: sonicdev-microsoft.azurecr.io:443/sonic-slave-buster:latest

    steps:
    - checkout: self
      clean: true
      submodules: recursive
      displayName: 'Checkout code'
    - script: |
        set -ex

        python3 setup.py bdist_wheel
        mkdir -p target/python-wheels/
        cp dist/*.whl $(Build.ArtifactStagingDirectory)/
      displayName: "Build"
    - script: |
        set -ex

        sudo pip3 install pytest==4.6.2 attrs==19.1.0 exabgp==4.0.10 distro==1.5.0 docker==4.4.1 redis==3.3.4 flaky==3.7.0
        sudo python3 -m pip install dist/swsssdk-2.0.1-py3-none-any.whl
        sudo py.test -v --junitxml=tr.xml
      displayName: "Unit tests"
    - publish: $(Build.ArtifactStagingDirectory)/
      artifact: sonic-py-swsssdk
      displayName: "Archive artifacts"
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: 'tr.xml'
        testRunTitle: Python 3
        failTaskOnFailedTests: true
      condition: succeededOrFailed()
      displayName: 'Publish Python 3 test results'
